(*INIT*)
dimension = 2;
operation = "SUM";
eqList = {"", ""};
displayF1 = " ";
displayF2 = " ";
eqPointer = 1;
coef1 = 1;
coef2 = 1;
AppendTo[$Path, NotebookDirectory[]];
(*Import Algebric first, cause it's functions are used in Guiutil*)
<< 
  AlgebricUtil.wl;
<< GuiUtil.wl;
(*Create numbers matrix*)
matrice = matrixConstructor[dimension];

 Dynamic[
 If[operation == "SUM", displayF1 = fieldCoef1;, displayF1 = " "]; " "]
Dynamic[If[operation == "SUM", displayF2 = fieldCoef2;, 
  displayF2 = " "]; " "]
dimensionPanel
 Dynamic[
 (*Clear in order to make "createMatrix" replace its arg with \
"matrice"*)
 Clear[matrice];
 Refresh[
  inputmatrix = createMatrix[dimension, matrice]; 
  matrice = matrixConstructor[dimension], TrackedSymbols -> {dimension}
  ];
 (*Instead of printing Null, evaluating the empty string, 
 the output of this dynamic is infact the empty string*)
 " "
 ]
(*GUI to display the equation beeing composed*)


Dynamic[composedGUI](*<Dynamic*)
(*Listen on "dimension" change and reset buttons to select matrix \
rows for the equation*)
Dynamic[Refresh[
  Clear[container];
  eqPointer = 0;
  rowsB = rowSelector[dimension, container]; " ", 
  TrackedSymbols -> {dimension}]
 ]
(*Listen on "container" change and update equation list*)
Dynamic[
 Refresh[
  eqList[[eqPointer]] = container;
  If[eqPointer == 2, " ", eqPointer = eqPointer + 1];
  " ", TrackedSymbols -> {container}]
 ]
eqPointer = 1;
eqList = {" ", " "};
(*Evaluate cell only at release time*)
(*CHECK EVALUATABLE CELL \
PROPERTY*)
AppendTo[$Path, NotebookDirectory[]];
<< MakeGui.wl;
makeGUI[];
Button["Edit Notebook", editNB[]]